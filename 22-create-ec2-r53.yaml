- name: Create ec2 Instances and Route53
  hosts: localhost
  connection: local
  vars:
    subnet_id: subnet-06537747f3b689663
    sg_id: sg-0a89d0b1ae02b30dd
    ami_id: ami-09c813fb71547fc4f
    instance_id: t2.micro
    zone: "sridevsecops.store"
    instances:
    - mysql
    - backend
    - frontend
  tasks:
  - name: Create AWS Python Libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3
    loop:
      - boto3
      - botocore
  - name: Create ec2 Instances
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: "{{ instance_id }}"
      image_id: "{{ ami_id }}"
      subnet_id: "{{ subnet_id }}"
      security_group: "{{ sg_id }}"
      network:
        assign_public_ip: yes
    loop: "{{ instances }}"
    register: ec2_info

  # - name: Print ec2 Instances info
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_info }}"

  - name: Print Private IP Address
    ansible.builtin.debug:
      msg: "{{ item.instances[0].private_ip_address }}"
    loop: "{{ ec2_info.results }}"

  - name: Create privateip for Route53
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results }}"
  - name: Create publicip for Route53
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results }}"
    when: item.item == "frontend"